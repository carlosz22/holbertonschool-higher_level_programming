===============================
 Testing 2-matrix_divided.py
===============================

Testing suite for the function `matrix_divided()` that divide all elements of a matrix (list of lists) by a certain number different from zero and then returns the new matrix divided.

Test cases
=======

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix_divided(5, 1)
Traceback (most recent call last): 
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 1) 
Traceback (most recent call last): 
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 1)
Traceback (most recent call last): 
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("holberton", 1)
Traceback (most recent call last): 
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(23.5, 1)
Traceback (most recent call last): 
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[0], [0, 1]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1], [1, 2, 3, 4, 5]], 1)
[[1.0, 2.0, 3.0, 4.0, 5.0], [5.0, 4.0, 3.0, 2.0, 1.0], [1.0, 2.0, 3.0, 4.0, 5.0]]

>>> matrix_divided([[2, 4], [6, 7], [8, 22], [91, 92]], 2.0)
[[1.0, 2.0], [3.0, 3.5], [4.0, 11.0], [45.5, 46.0]]

>>> matrix_divided([[10, 20, 30, 40, 50], [1, 2, 3, 4], [1, 2, 3, 4, 5]], 10)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 6, 9], [15, 18, 21], [30, 31, 32]], 3.00)
[[1.0, 2.0, 3.0], [5.0, 6.0, 7.0], [10.0, 10.33, 10.67]]

>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4], [3, 4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4], [3, 4, 5, 6]], 0.0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4], [3, 4, 5, 6]], [1.0])
Traceback (most recent call last): 
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4], [3, 4, 5, 6]], None)
Traceback (most recent call last): 
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4], [3, 4, 5, 6]], [])
Traceback (most recent call last): 
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4], [3, 4, 5, 6]], {})
Traceback (most recent call last): 
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4], [3, 4, 5, 6]], '?')
Traceback (most recent call last): 
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4], [3, 4, 5, 6]], "")
Traceback (most recent call last): 
TypeError: div must be a number
